# Generated by binpac_quickstart

refine flow RIP_Flow += {

        function proc_rip_message(msg: RIP_PDU): bool

                %{
		// Because this is in %{'s this is C++ code, and you need // for a comment
		// # Check for two possible versions
                if ( ${msg.version} != RIP_V1 && ${msg.version} != RIP_V2 )
                        {
                        connection()->bro_analyzer()->ProtocolViolation("Invalid RIP version");
                        return false;
                        }

                if ( ${msg.command} == RIP_REQUEST )
			{
			printf("In b4 rip_request!\n");
                        BifEvent::generate_rip_request(connection()->bro_analyzer(), connection()->bro_analyzer()->Conn(),
                        ${msg.command},
                        ${msg.version});
                        return true;
                        }

                if ( ${msg.command} == RIP_RESPONSE )
                        {
                        BifEvent::generate_rip_response(connection()->bro_analyzer(), connection()->bro_analyzer()->Conn(),
                        ${msg.command},
                        ${msg.version});
                        return true;
                        }

                connection()->bro_analyzer()->ProtocolViolation("Invalid RIP command");
                return false;

                %}
};

refine typeattr RIP_PDU += &let {
        proc: bool = $context.flow.proc_rip_message(this);
};
